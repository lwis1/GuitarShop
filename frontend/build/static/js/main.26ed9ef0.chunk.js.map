{"version":3,"sources":["constants/productConstants.js","constants/cartConstants.js","constants/userConstants.js","constants/orderConstants.js","store.js","reducers/productReducers.js","reducers/cartReducers.js","reducers/userReducers.js","reducers/orderReducers.js","actions/userAction.js","components/SearchBox.js","components/Header.js","components/Footer.js","components/Rating.js","components/Product.js","components/Paginate.js","components/Loader.js","components/Message.js","actions/productActions.js","components/ProductCarousel.js","components/Meta.js","screens/HomeScreen.js","screens/ProductScreen.js","actions/cartActions.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","actions/orderActions.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","screens/OrderListScreen.js","App.js","reportWebVitals.js","index.js"],"names":["PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_LIST_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_RESET","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAIL","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_RESET","PRODUCT_TOP_SUCCESS","PRODUCT_TOP_FAIL","PRODUCT_TOP_REQUEST","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_RESET","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","ORDER_DELIVER_RESET","reducer","combineReducers","productList","state","products","action","type","loading","payload","pages","page","error","productDetails","product","reviews","productDelete","success","productCreate","productUpdate","productReviewCreate","productTopRated","cart","cartItems","shippingAddress","item","existItem","find","x","map","filter","paymentMethod","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","userList","users","userDelete","userUpdate","orderCreate","order","orderDetails","orderItems","orderPay","orderDeliver","orderListMy","orders","orderList","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","getUserDetails","id","dispatch","getState","a","config","headers","Authorization","token","axios","get","data","response","message","SearchBox","history","useState","keyword","setKeyword","Form","onSubmit","e","preventDefault","trim","push","inline","Row","style","backgroundColor","Col","sm","Control","name","onChange","target","value","placeholder","className","Button","variant","Header","useDispatch","useSelector","Navbar","bg","expand","collapseOnSelect","Container","to","Brand","Toggle","Collapse","render","Nav","Link","NavDropdown","title","Item","onClick","removeItem","isAdmin","footer","Rating","text","color","defaultProps","Product","Card","_id","Img","src","image","Body","Title","as","Text","rating","numReviews","price","Paginate","Pagination","Array","keys","active","Loader","Spinner","animation","role","width","height","margin","display","Message","children","Alert","listProducts","pageNumber","listProductDetails","ProductCarousel","useEffect","Carousel","pause","interval","Image","alt","fluid","Caption","Meta","description","keywords","Helmet","content","HomeScreen","match","params","md","lg","xl","ProductScreen","qty","setQty","setRating","comment","setComment","successProductReview","errorProductReview","alert","ListGroup","ListGroupItem","countInStock","disabled","length","review","createdAt","substring","productId","post","Group","controlId","Label","row","addToCart","setItem","stringify","CartScreen","location","search","Number","split","removeFromCartHandler","removeFromCart","lenght","rounded","reduce","acc","toFixed","FormContainer","xs","LoginScreen","email","setEmail","password","setPassword","redirect","login","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","ProfileScreen","loadingOrders","errorOrders","put","updateUserProfile","Table","striped","bordered","hover","responsive","totalPrice","isPaid","paidAt","isDelivered","deliveredAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","required","size","PaymentScreen","setPaymentMethod","Check","label","checked","PlaceOrderScreen","addDecimals","num","Math","round","itemsPrice","shippingPrice","taxPrice","index","createOrder","OrderScreen","orderId","sdkReady","setSdkReady","loadingPay","successPay","loadingDeliver","successDeliver","addPayPalScript","clientId","script","document","createElement","async","onload","body","appendChild","window","paypal","href","isDelivred","delivredAt","amount","onSuccess","paymentResult","console","log","payOrder","deliverOrder","UserListScreen","successDelete","deleteHandler","confirm","delete","deleteUser","borderCollapse","borderSpacing","UserEditScreen","userId","setIsAdmin","loadingUpdate","errorUpdate","successUpdate","variantt","updateUser","ProductListScreen","loadingDelete","errorDelete","loadingCreate","errorCreate","successCreate","createdProduct","deleteProduct","category","brand","ProductEditScreen","setPrice","setImage","setBrand","setCategory","setCountInStock","setDescription","uploading","setUploading","uploadFileHandler","file","files","formData","FormData","append","updateProduct","FormFile","custom","OrderListScreen","isDelevred","delevredAt","App","path","component","exact","Footer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.26ed9ef0.chunk.js","sourcesContent":["export const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\r\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\r\nexport const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\r\n\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\r\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\r\n\r\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS'\r\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL'\r\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST'\r\n\r\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS'\r\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL'\r\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST'\r\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET'\r\n\r\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS'\r\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL'\r\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST'\r\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET'\r\n\r\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS'\r\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL'\r\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST'\r\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET'\r\n\r\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS'\r\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL'\r\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST'","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\r\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\r\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\r\n\r\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\r\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\r\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\r\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\r\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\r\n\r\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\r\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\r\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\r\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\r\n\r\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\r\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\r\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\r\n\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\r\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'\r\n\r\n","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\r\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\r\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\r\n// export const ORDER_CREATE_RESET = 'ORDER_CREATE_RESET'\r\n\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\r\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\r\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\r\n\r\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\r\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\r\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\r\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\r\n\r\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\r\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\r\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\r\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'\r\n\r\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\r\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS'\r\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'\r\n\r\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST'\r\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS'\r\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL'\r\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET'\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport { productListReducer,productDetailsReducer, productDeleteReducer, productCreateReducer,productUpdateReducer, productReviewCreateReducer, productTopRatedReducer,} from './reducers/productReducers'\r\nimport { cartReducer } from './reducers/cartReducers'\r\nimport {userLoginReducer, userRegisterReducer, userDetailsReducer,userUpdateProfileReducer, userListReducer, userDeleteReducer, userUpdateReducer} from './reducers/userReducers'\r\nimport {orderCreateReducer,orderDetailsReducer, orderPayReducer, orderListMyReducer, orderListReducer,orderDeliverReducer} from './reducers/orderReducers'\r\n\r\nconst reducer = combineReducers({\r\n    productList: productListReducer,\r\n    productDetails: productDetailsReducer,\r\n    productDelete: productDeleteReducer,\r\n    productCreate: productCreateReducer,\r\n    productUpdate: productUpdateReducer,\r\n    productReviewCreate: productReviewCreateReducer,\r\n    productTopRated: productTopRatedReducer,\r\n    cart: cartReducer,\r\n    userLogin: userLoginReducer,\r\n    userRegister: userRegisterReducer,\r\n    userDetails: userDetailsReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n    userList: userListReducer,\r\n    userDelete: userDeleteReducer,\r\n    userUpdate: userUpdateReducer,\r\n    orderCreate: orderCreateReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    orderPay: orderPayReducer,\r\n    orderDeliver: orderDeliverReducer,\r\n    orderListMy: orderListMyReducer,\r\n    orderList: orderListReducer,\r\n})\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : []\r\n\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress')\r\n  ? JSON.parse(localStorage.getItem('shippingAddress'))\r\n  : {}\r\n\r\nconst initialState = {\r\n    cart: { cartItems: cartItemsFromStorage,\r\n    shippingAddress: shippingAddressFromStorage},\r\n    userLogin: { userInfo: userInfoFromStorage}\r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(\r\n    reducer,\r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n)\r\n\r\nexport default store","import {PRODUCT_CREATE_FAIL, PRODUCT_CREATE_REQUEST, PRODUCT_CREATE_RESET, PRODUCT_CREATE_REVIEW_FAIL, PRODUCT_CREATE_REVIEW_REQUEST, PRODUCT_CREATE_REVIEW_RESET, PRODUCT_CREATE_REVIEW_SUCCESS, PRODUCT_CREATE_SUCCESS, PRODUCT_DELETE_FAIL, PRODUCT_DELETE_REQUEST, PRODUCT_DELETE_SUCCESS, PRODUCT_DETAILS_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, \r\nPRODUCT_LIST_FAIL,PRODUCT_LIST_REQUEST,PRODUCT_LIST_SUCCESS, PRODUCT_TOP_FAIL, PRODUCT_TOP_REQUEST, PRODUCT_TOP_SUCCESS, PRODUCT_UPDATE_FAIL, PRODUCT_UPDATE_REQUEST, PRODUCT_UPDATE_RESET, PRODUCT_UPDATE_SUCCESS} from '../constants/productConstants'\r\n\r\nexport const productListReducer = (state = {products: [] }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_LIST_REQUEST :\r\n        return { loading: true, products:[] }\r\n        case PRODUCT_LIST_SUCCESS :\r\n        return { loading: false, products: action.payload.products, pages: action.payload.pages, page: action.payload.page }\r\n        case PRODUCT_LIST_FAIL :\r\n            return{ loading: false, error: action.payload }\r\n            default:\r\n                return state \r\n    }\r\n}\r\n\r\nexport const productDetailsReducer = (state = {product: { reviews: [] } }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_DETAILS_REQUEST :\r\n        return {  ...state, loading: true }\r\n        case PRODUCT_DETAILS_SUCCESS :\r\n        return { loading: false, product: action.payload }\r\n        case PRODUCT_DETAILS_FAIL :\r\n            return{ loading: false, error: action.payload }\r\n            default:\r\n                return state \r\n    }\r\n}\r\n\r\nexport const productDeleteReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_DELETE_REQUEST :\r\n        return { loading: true }\r\n        case PRODUCT_DELETE_SUCCESS :\r\n        return { loading: false, success: true}\r\n        case PRODUCT_DELETE_FAIL :\r\n            return{ loading: false, error: action.payload }\r\n            default:\r\n                return state \r\n    }\r\n}\r\n\r\nexport const productCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_CREATE_REQUEST :\r\n            return { loading: true }\r\n        case PRODUCT_CREATE_SUCCESS :\r\n            return { loading: false, success: true, product: action.payload}\r\n        case PRODUCT_CREATE_FAIL :\r\n            return{ loading: false, error: action.payload }\r\n        case PRODUCT_CREATE_RESET :\r\n            return {}\r\n            default:\r\n                return state \r\n    }\r\n}\r\n\r\nexport const productUpdateReducer = (state = { product: {} }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_UPDATE_REQUEST :\r\n            return { loading: true }\r\n        case PRODUCT_UPDATE_SUCCESS :\r\n            return { loading: false, success: true, product: action.payload}\r\n        case PRODUCT_UPDATE_FAIL :\r\n            return{ loading: false, error: action.payload }\r\n        case PRODUCT_UPDATE_RESET :\r\n            return  { product: {}}\r\n            default:\r\n                return state \r\n    }\r\n}\r\n\r\nexport const productReviewCreateReducer = (state = { }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_CREATE_REVIEW_REQUEST :\r\n            return { loading: true }\r\n        case PRODUCT_CREATE_REVIEW_SUCCESS :\r\n            return { loading: false, success: true}\r\n        case PRODUCT_CREATE_REVIEW_FAIL :\r\n            return{ loading: false, error: action.payload }\r\n        case PRODUCT_CREATE_REVIEW_RESET :\r\n            return  {}\r\n            default:\r\n                return state \r\n    }\r\n}\r\n\r\nexport const productTopRatedReducer = (state = { products: []}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_TOP_REQUEST :\r\n            return { loading: true, products: [] }\r\n        case PRODUCT_TOP_SUCCESS :\r\n            return { loading: false, products: action.payload}\r\n        case PRODUCT_TOP_FAIL :\r\n            return{ loading: false, error: action.payload }\r\n            default:\r\n                return state \r\n    }\r\n}","import { CART_ADD_ITEM, CART_REMOVE_ITEM,CART_SAVE_SHIPPING_ADDRESS ,CART_SAVE_PAYMENT_METHOD} from '../constants/cartConstants'\r\n\r\nexport const cartReducer = (state = { cartItems: [] , shippingAddress: {} }, action) => {\r\n    switch (action.type) {\r\n        case CART_ADD_ITEM:\r\n            const item = action.payload\r\n\r\n            const existItem = state.cartItems.find(x => x.product === item.product)\r\n            \r\n            if (existItem) {\r\n                return {\r\n                    ...state,\r\n                    cartItems: state.cartItems.map(x => x.product === existItem.product ? item :x)\r\n                }\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    cartItems: [...state.cartItems, item],\r\n                }\r\n            }\r\n            case CART_REMOVE_ITEM :\r\n                return {\r\n                    ...state,\r\n                    cartItems: state.cartItems.filter(x=> x.product !== action.payload)\r\n                }\r\n            case CART_SAVE_SHIPPING_ADDRESS:\r\n                return {\r\n                    ...state,\r\n                    shippingAddress: action.payload,\r\n                }\r\n            case CART_SAVE_PAYMENT_METHOD:\r\n                return {\r\n                    ...state,\r\n                    paymentMethod: action.payload,\r\n                }\r\n    \r\n        default:\r\n            return state\r\n            \r\n    }\r\n}","import {\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGOUT,\r\n    USER_REGISTER_FAIL,\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_RESET,\r\n    USER_DETAILS_RESET,\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n    USER_UPDATE_RESET,\r\n  } from '../constants/userConstants'\r\n  \r\n  export const userLoginReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n      case USER_LOGIN_REQUEST:\r\n        return { loading: true }\r\n      case USER_LOGIN_SUCCESS:\r\n        return { loading: false, userInfo: action.payload }\r\n      case USER_LOGIN_FAIL:\r\n        return { loading: false, error: action.payload }\r\n      case USER_LOGOUT:\r\n        return {}\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n  \r\nexport const userRegisterReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n      case USER_REGISTER_REQUEST:\r\n        return { loading: true }\r\n      case USER_REGISTER_SUCCESS:\r\n        return { loading: false, userInfo: action.payload }\r\n      case USER_REGISTER_FAIL:\r\n        return { loading: false, error: action.payload }\r\n      case USER_LOGOUT:\r\n        return {}\r\n      default:\r\n        return state\r\n    }\r\n}\r\n  \r\nexport const userDetailsReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n      case USER_DETAILS_REQUEST:\r\n        return { ...state, loading: true }\r\n      case USER_DETAILS_SUCCESS:\r\n        return { loading: false, user: action.payload }\r\n      case USER_DETAILS_FAIL:\r\n        return { loading: false, error: action.payload }\r\n      case USER_DETAILS_RESET:\r\n        return { user: {} }\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n  \r\n  export const userUpdateProfileReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n      case USER_UPDATE_PROFILE_REQUEST:\r\n        return { loading: true }\r\n      case USER_UPDATE_PROFILE_SUCCESS:\r\n        return { loading: false, success: true, userInfo: action.payload }\r\n      case USER_UPDATE_PROFILE_FAIL:\r\n        return { loading: false, error: action.payload }\r\n      case USER_UPDATE_PROFILE_RESET:\r\n        return {}\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n  \r\n  export const userListReducer = (state = { users: [] }, action) => {\r\n    switch (action.type) {\r\n      case USER_LIST_REQUEST:\r\n        return { loading: true }\r\n      case USER_LIST_SUCCESS:\r\n        return { loading: false, users: action.payload }\r\n      case USER_LIST_FAIL:\r\n        return { loading: false, error: action.payload }\r\n      case USER_LIST_RESET:\r\n        return { users: [] }\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n  \r\n  export const userDeleteReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n      case USER_DELETE_REQUEST:\r\n        return { loading: true }\r\n      case USER_DELETE_SUCCESS:\r\n        return { loading: false, success: true }\r\n      case USER_DELETE_FAIL:\r\n        return { loading: false, error: action.payload }\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n  \r\n  export const userUpdateReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n      case USER_UPDATE_REQUEST:\r\n        return { loading: true }\r\n      case USER_UPDATE_SUCCESS:\r\n        return { loading: false, success: true }\r\n      case USER_UPDATE_FAIL:\r\n        return { loading: false, error: action.payload }\r\n      case USER_UPDATE_RESET:\r\n        return {\r\n          user: {},\r\n        }\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n  ","import{ORDER_CREATE_FAIL,ORDER_CREATE_REQUEST,ORDER_CREATE_SUCCESS,ORDER_DETAILS_SUCCESS,ORDER_DETAILS_REQUEST,ORDER_DETAILS_FAIL, ORDER_PAY_REQUEST, ORDER_PAY_SUCCESS, ORDER_PAY_FAIL, ORDER_PAY_RESET, ORDER_LIST_MY_FAIL, ORDER_LIST_MY_SUCCESS, ORDER_LIST_MY_REQUEST, ORDER_LIST_MY_RESET, ORDER_LIST_REQUEST, ORDER_LIST_SUCCESS, ORDER_LIST_FAIL, ORDER_DELIVER_REQUEST, ORDER_DELIVER_SUCCESS, ORDER_DELIVER_FAIL, ORDER_DELIVER_RESET}from '../constants/orderConstants'\r\n\r\nexport const orderCreateReducer = (state = {},action) => {\r\n    switch (action.type) {\r\n        case ORDER_CREATE_REQUEST:\r\n            return{\r\n                loading: true\r\n            }\r\n        case ORDER_CREATE_SUCCESS:\r\n            return{\r\n                loading:false,\r\n                success:true,\r\n                order: action.payload\r\n            }\r\n        case ORDER_CREATE_FAIL:\r\n            return{\r\n                loading: false,\r\n                error: action.payload \r\n            }\r\n\r\n        default:\r\n            return state;\r\n    } \r\n}\r\n\r\nexport const orderDetailsReducer = (state = { loading: true, orderItems: [], shippingAddress: {}},action) => {\r\n    switch (action.type) {\r\n        case ORDER_DETAILS_REQUEST:\r\n            return{\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case ORDER_DETAILS_SUCCESS:\r\n            return{\r\n                loading:false,\r\n                order: action.payload\r\n            }\r\n        case ORDER_DETAILS_FAIL:\r\n            return{\r\n                loading: false,\r\n                error: action.payload \r\n            }\r\n\r\n        default:\r\n            return state;\r\n    } \r\n}\r\n\r\nexport const orderPayReducer = (state ={}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_PAY_REQUEST:\r\n            return{\r\n                loading: true\r\n            }\r\n        case ORDER_PAY_SUCCESS:\r\n            return{\r\n                loading:false,\r\n                success: true,\r\n            }\r\n        case ORDER_PAY_FAIL:\r\n            return{\r\n                loading: false,\r\n                error: action.payload \r\n            }\r\n        case ORDER_PAY_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    } \r\n}\r\n\r\nexport const orderListMyReducer = (state = { orders: [] }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_LIST_MY_REQUEST:\r\n            return {\r\n            loading: true,\r\n        }\r\n        case ORDER_LIST_MY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders: action.payload,\r\n            }\r\n        case ORDER_LIST_MY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload,\r\n            } \r\n        case ORDER_LIST_MY_RESET:\r\n            return { orders: [] }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderListReducer = (state = { orders: [] }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_LIST_REQUEST:\r\n            return {\r\n            loading: true,\r\n        }\r\n        case ORDER_LIST_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders: action.payload,\r\n            }\r\n        case ORDER_LIST_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload,\r\n            } \r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderDeliverReducer = (state ={}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_DELIVER_REQUEST:\r\n            return{\r\n                loading: true\r\n            }\r\n        case ORDER_DELIVER_SUCCESS:\r\n            return{\r\n                loading:false,\r\n                success: true,\r\n            }\r\n        case ORDER_DELIVER_FAIL:\r\n            return{\r\n                loading: false,\r\n                error: action.payload \r\n            }\r\n        case ORDER_DELIVER_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    } \r\n}","import axios from 'axios'\r\nimport {\r\n  USER_DETAILS_FAIL,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_FAIL,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_UPDATE_PROFILE_FAIL,\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n  USER_DETAILS_RESET,\r\n  USER_LIST_REQUEST,\r\n  USER_LIST_SUCCESS,\r\n  USER_LIST_FAIL,\r\n  USER_LIST_RESET,\r\n  USER_DELETE_REQUEST,\r\n  USER_DELETE_SUCCESS,\r\n  USER_DELETE_FAIL,\r\n  USER_UPDATE_REQUEST,\r\n  USER_UPDATE_SUCCESS,\r\n  USER_UPDATE_FAIL,\r\n} from '../constants/userConstants'\r\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_LOGIN_REQUEST,\r\n    })\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.post(\r\n      '/api/users/login',\r\n      { email, password },\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    })\r\n\r\n    localStorage.setItem('userInfo', JSON.stringify(data))\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LOGIN_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const logout = () => (dispatch) => {\r\n  localStorage.removeItem('userInfo')\r\n  dispatch({ type: USER_LOGOUT })\r\n  dispatch({ type: USER_DETAILS_RESET })\r\n  dispatch({ type: ORDER_LIST_MY_RESET })\r\n  dispatch({ type: USER_LIST_RESET })\r\n}\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_REGISTER_REQUEST,\r\n    })\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.post(\r\n      '/api/users',\r\n      { name, email, password },\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: USER_REGISTER_SUCCESS,\r\n      payload: data,\r\n    })\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    })\r\n\r\n    localStorage.setItem('userInfo', JSON.stringify(data))\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_REGISTER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_DETAILS_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get(`/api/users/${id}`, config)\r\n\r\n    dispatch({\r\n      type: USER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_DETAILS_FAIL,\r\n      payload: error.response && error.response.data.message\r\n      ? error.response.data.message\r\n      : error.message\r\n    })\r\n  }\r\n}\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.put(`/api/users/profile`, user, config)\r\n\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type :USER_UPDATE_PROFILE_FAIL,\r\n      payload:\r\n        error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message\r\n    })\r\n  }\r\n}\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_LIST_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get(`/api/users`, config)\r\n\r\n    dispatch({\r\n      type: USER_LIST_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    \r\n    dispatch({\r\n      type: USER_LIST_FAIL,\r\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n      \r\n    })\r\n  }\r\n}\r\n\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_DELETE_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    await axios.delete(`/api/users/${id}`, config)\r\n\r\n    dispatch({ type: USER_DELETE_SUCCESS })\r\n  } catch (error) {\r\n    \r\n    dispatch({\r\n      type: USER_DELETE_FAIL,\r\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n      \r\n    })\r\n  }\r\n}\r\n\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_UPDATE_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type':'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const {data} = await axios.put(`/api/users/${user._id}`,user, config)\r\n\r\n    dispatch({ type: USER_UPDATE_SUCCESS })\r\n    dispatch({ type: USER_DETAILS_SUCCESS, payload: data })\r\n  } catch (error) {\r\n    \r\n    dispatch({\r\n      type: USER_UPDATE_FAIL,\r\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n      \r\n    })\r\n  }\r\n}","import React, {useState} from 'react'\r\nimport {Form,Button, Row, Col} from 'react-bootstrap'\r\n\r\nconst SearchBox = ({ history }) => {\r\n    const [keyword, setKeyword] = useState('')\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if (keyword.trim()) {\r\n            history.push(`/search/${keyword}`)\r\n        } else {\r\n            history.push('/')\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <Form onSubmit={submitHandler} inline >\r\n                <Row  style={{backgroundColor:'#343A40'}}>\r\n                    <Col sm={8}>\r\n                        <Form.Control type='text' name='q' onChange={(e) => setKeyword(e.target.value)} placeholder='Search Products ...' className='mr-sm-2 ml-sm-5'></Form.Control>\r\n                    </Col>\r\n                    <Col sm={4}>\r\n                        <Button type='submit' variant='outline-success' className='p-2'>\r\n                            Search\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n                \r\n            </Form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SearchBox\r\n","import React from 'react';\r\nimport {LinkContainer} from 'react-router-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {Navbar , Nav , Container,NavDropdown} from 'react-bootstrap';\r\nimport { logout } from '../actions/userAction'\r\nimport SearchBox from './SearchBox'\r\nimport {Route} from 'react-router-dom'\r\n\r\n\r\nconst Header = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const logoutHandler = () => {\r\n    dispatch(logout())\r\n  }\r\n\r\n    return (\r\n        <header>\r\n            <Navbar bg=\"dark\" variant='dark' expand=\"lg\" collapseOnSelect>\r\n                <Container>\r\n                    <LinkContainer to='/'>\r\n                        <Navbar.Brand>ProShop</Navbar.Brand>\r\n                    </LinkContainer>\r\n                    \r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                      < Route render={ ({ history }) => <SearchBox history={history} /> } />\r\n                        <Nav className=\"ms-auto\">\r\n                            <LinkContainer to='/cart'>\r\n                                <Nav.Link ><i className='fas fa-shopping-cart'></i>Cart</Nav.Link>\r\n                            </LinkContainer>\r\n                            {userInfo ? (\r\n                <NavDropdown title={userInfo.name} id='username'>\r\n                  <LinkContainer to='/profile'>\r\n                    <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <NavDropdown.Item onClick={logoutHandler}>\r\n                    Logout\r\n                  </NavDropdown.Item>\r\n                </NavDropdown>\r\n              ) : (\r\n                <LinkContainer to='/login'>\r\n                  <Nav.Link>\r\n                    <i className='fas fa-user'></i> Sign In\r\n                  </Nav.Link>\r\n                </LinkContainer>\r\n              )}\r\n              {userInfo && userInfo.isAdmin && (\r\n                <NavDropdown title='Admin' id='adminmenu'>\r\n                  <LinkContainer to='/admin/userlist'>\r\n                    <NavDropdown.Item>Users</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <LinkContainer to='/admin/productlist'>\r\n                    <NavDropdown.Item>Products</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <LinkContainer to='/admin/orderlist'>\r\n                    <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                </NavDropdown>  )}\r\n           </Nav>\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport { Container , Col ,Row } from \"react-bootstrap\";\r\n\r\nconst footer = () => {\r\n    return (\r\n        <footer>\r\n            <Container>\r\n                <Row>\r\n                    <Col className='text-center py-3'>\r\n                        Copyright &copy; Proshop\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default footer\r\n","import React from 'react'\r\nconst Rating = ({value, text , color}) => {\r\n    return (\r\n        <div className='rating'>\r\n            <span>\r\n        <i style={{color}}\r\n        className=\r\n        {\r\n            value>=1 \r\n            ? 'fas fa-star' \r\n            : value>=0.5 \r\n            ? 'fas fa-star-half-alt' \r\n            : 'far fa-star'\r\n            }\r\n            ></i>\r\n        </span>\r\n        <span>\r\n        <i style={{color}}\r\n        className=\r\n        {\r\n            value>=2 \r\n            ? 'fas fa-star' \r\n            : value>=1.5 \r\n            ? 'fas fa-star-half-alt' \r\n            : 'far fa-star'\r\n            }\r\n            ></i>\r\n        </span>\r\n        <span>\r\n        <i style={{color}}\r\n        className=\r\n        {\r\n            value>=3 \r\n            ? 'fas fa-star' \r\n            : value>=2.5 \r\n            ? 'fas fa-star-half-alt' \r\n            : 'far fa-star'\r\n            }\r\n            ></i>\r\n        </span>\r\n        <span>\r\n        <i style={{color}}\r\n        className=\r\n        {\r\n            value>=4 \r\n            ? 'fas fa-star' \r\n            : value>=3.5 \r\n            ? 'fas fa-star-half-alt' \r\n            : 'far fa-star'\r\n            }\r\n            ></i>\r\n        </span>\r\n        <span>\r\n        <i style={{color}}\r\n        className=\r\n        {\r\n            value>=5 \r\n            ? 'fas fa-star' \r\n            : value>=4.5 \r\n            ? 'fas fa-star-half-alt' \r\n            : 'far fa-star'\r\n            }\r\n            ></i>\r\n        </span>\r\n            <span>{text && text}</span>\r\n        </div>\r\n    )\r\n}\r\nRating.defaultProps ={\r\n    color: '#f8e825',\r\n}\r\n\r\nexport default Rating\r\n","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {Card} from 'react-bootstrap'\r\nimport Rating from './Rating'\r\nconst Product = ({product}) => {\r\n    return (\r\n        \r\n        <Card className='my-3 p-3 rounded'>\r\n            <Link to={`/product/${product._id}`} >\r\n                <Card.Img src={product.image} variant='top' />\r\n            </Link>\r\n            \r\n            <Card.Body>\r\n                <Link to={`/product/${product._id}`}>\r\n                    <Card.Title as='div'><strong>{product.name}</strong></Card.Title>\r\n                </Link>\r\n                <Card.Text as='div'>\r\n                    <Rating value={product.rating}\r\n                    text={`${product.numReviews} reviews`} /> \r\n                </Card.Text>\r\n                \r\n                <Card.Text as='h3'>${product.price}</Card.Text>\r\n            </Card.Body>\r\n            \r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Product\r\n","import React from 'react'\r\nimport { Pagination } from 'react-bootstrap' \r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\n\r\nconst Paginate = ({ pages, page, isAdmin = false, keyword = '' }) => {\r\n    return (\r\n        pages > 1 && (\r\n            <Pagination>\r\n                {[...Array(pages).keys()].map((x) => (\r\n                    <LinkContainer\r\n                        key={x + 1}\r\n                        to={\r\n                            !isAdmin\r\n                            ? keyword\r\n                            ? `/search/${keyword}/page/${x + 1}`\r\n                            : `/page/${x + 1}`\r\n                            : `/admin/productlist/${x + 1}`\r\n                        }\r\n                    >\r\n                    <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\r\n                </LinkContainer>\r\n                ))}\r\n            </Pagination>\r\n        )\r\n    )\r\n}\r\n\r\nexport default Paginate","import React from 'react'\r\nimport {Spinner} from 'react-bootstrap'\r\nconst Loader = () => {\r\n    return (\r\n        <Spinner animation='border'\r\n        role='status'\r\n        style={{\r\n            width:'100px',\r\n            height:'100px',\r\n            margin:'auto',\r\n            display:'block',\r\n        }}>\r\n            <span className='sr-only'>Loading...</span>\r\n        </Spinner>\r\n    )\r\n}\r\n\r\nexport default Loader\r\n","import React from 'react'\r\nimport {Alert} from 'react-bootstrap'\r\n\r\nconst Message = ({variant, children}) => {\r\n    return (\r\n        <Alert variant={variant}>\r\n            {children}\r\n        </Alert>\r\n    )\r\n}\r\nMessage.defaultProps ={\r\n    variant:'info',\r\n}\r\n\r\nexport default Message\r\n","import axios from 'axios'\r\nimport { PRODUCT_LIST_FAIL, PRODUCT_LIST_SUCCESS, PRODUCT_LIST_REQUEST, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_DETAILS_FAIL, PRODUCT_DELETE_REQUEST, PRODUCT_DELETE_SUCCESS, PRODUCT_DELETE_FAIL, PRODUCT_CREATE_SUCCESS,PRODUCT_CREATE_FAIL, PRODUCT_CREATE_REQUEST, PRODUCT_UPDATE_FAIL,PRODUCT_UPDATE_SUCCESS, PRODUCT_UPDATE_REQUEST, PRODUCT_CREATE_REVIEW_FAIL, PRODUCT_CREATE_REVIEW_SUCCESS, PRODUCT_CREATE_REVIEW_REQUEST, PRODUCT_TOP_REQUEST, PRODUCT_TOP_SUCCESS, PRODUCT_TOP_FAIL } from '../constants/productConstants'\r\n\r\nexport const listProducts = (keyword = '', pageNumber = '') => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_LIST_REQUEST})\r\n        const { data } = await axios.get(`/api/products?keyword=${keyword}&pageNumber=${pageNumber}`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_LIST_SUCCESS,\r\n            payload: data,\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_LIST_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_DETAILS_REQUEST})\r\n        const {data} = await axios.get(`/api/products/${id}`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data,\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: PRODUCT_DELETE_REQUEST,\r\n      })\r\n  \r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState()\r\n  \r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      }\r\n  \r\n      await axios.delete(`/api/products/${id}`, config)\r\n  \r\n      dispatch({\r\n        type: PRODUCT_DELETE_SUCCESS,\r\n      }) \r\n    } catch (error) {\r\n      dispatch({\r\n      type: PRODUCT_DELETE_FAIL,\r\n      payload:  error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message\r\n      })\r\n    }\r\n  }\r\n\r\n  export const createProduct = (id) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: PRODUCT_CREATE_REQUEST,\r\n      })\r\n  \r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState()\r\n  \r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      }\r\n  \r\n      const {data} = await axios.post(`/api/products`,{}, config)\r\n  \r\n      dispatch({\r\n        type: PRODUCT_CREATE_SUCCESS,\r\n        payload: data,\r\n      }) \r\n    } catch (error) {\r\n      dispatch({\r\n      type: PRODUCT_CREATE_FAIL,\r\n      payload:  error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message\r\n      })\r\n    }\r\n  }\r\n\r\n  export const updateProduct = (product) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: PRODUCT_UPDATE_REQUEST,\r\n      })\r\n  \r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState()\r\n  \r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      }\r\n  \r\n      const {data} = await axios.put(`/api/products/${product._id}`,product, config)\r\n  \r\n      dispatch({\r\n        type: PRODUCT_UPDATE_SUCCESS,\r\n        payload: data,\r\n      }) \r\n    } catch (error) {\r\n      dispatch({\r\n      type: PRODUCT_UPDATE_FAIL,\r\n      payload:  error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message\r\n      })\r\n    }\r\n  }\r\n\r\n  export const createProductReview = (productId, review) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: PRODUCT_CREATE_REVIEW_REQUEST,\r\n      })\r\n  \r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState()\r\n  \r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      }\r\n  \r\n      await axios.post(`/api/products/${productId}/reviews`,review, config)\r\n  \r\n      dispatch({\r\n        type: PRODUCT_CREATE_REVIEW_SUCCESS,\r\n      }) \r\n    } catch (error) {\r\n      dispatch({\r\n      type: PRODUCT_CREATE_REVIEW_FAIL,\r\n      payload:  error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message\r\n      })\r\n    }\r\n  }\r\n\r\n  export const listTopProducts = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_TOP_REQUEST})\r\n        const { data } = await axios.get('/api/products/top')\r\n\r\n        dispatch({\r\n            type: PRODUCT_TOP_SUCCESS,\r\n            payload: data,\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_TOP_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n\r\n    }\r\n}","import React, {useEffect} from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Carousel, Image } from 'react-bootstrap'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport Loader from './Loader'\r\nimport Message from './Message'\r\nimport { listTopProducts} from '../actions/productActions'\r\n\r\nconst ProductCarousel = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const productTopRated = useSelector(state => state.productTopRated)\r\n\r\n    const { loading , error, products } = productTopRated\r\n\r\n    useEffect(() => {\r\n        dispatch(listTopProducts())\r\n    }, [dispatch])\r\n    return (\r\n        <>\r\n            <br></br>\r\n            {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\r\n                <Carousel pause='hover' className='bg-dark'>\r\n                    {products.map(product => (\r\n                        <Carousel.Item key={product._id}  interval={2500}>\r\n                            <Link to={`/product/${product._id}`}>\r\n                                <Image src={product.image} alt={product.name} fluid className=\"d-block w-10\" />\r\n                                <Carousel.Caption className='carousel-caption' >\r\n                                    <h2>\r\n                                        {product.name} (${product.price})\r\n                                    </h2>\r\n                                </Carousel.Caption>\r\n                            </Link>\r\n                        </Carousel.Item>\r\n                    ))}\r\n                </Carousel>\r\n            )}\r\n            <br></br><br></br><br></br>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProductCarousel\r\n","import React from 'react'\r\nimport {Helmet} from 'react-helmet'\r\nconst Meta = ({title, description, keywords}) => {\r\n    return (\r\n        <Helmet>\r\n            <title>{title}</title>\r\n            <meta name='description' content={description} />\r\n            <meta name='keywords' content={keywords} />\r\n\r\n        </Helmet>\r\n    )\r\n}\r\nMeta.defaultProps = {\r\n    title: 'Welcome To Proshop',\r\n    description: 'We sell the best products for cheap',\r\n    keywords: 'electronics, buy electronics, cheap electronics',\r\n}\r\nexport default Meta\r\n","import React, {useEffect} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport  { useDispatch, useSelector} from 'react-redux'\r\nimport { Row,Col } from 'react-bootstrap'\r\nimport Product from '../components/Product'\r\nimport Paginate from '../components/Paginate'\r\nimport ProductCarousel from '../components/ProductCarousel'\r\nimport { listProducts } from '../actions/productActions'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport Meta from '../components/Meta'\r\n\r\n\r\nconst HomeScreen = ({match}) => {\r\n    const keyword = match.params.keyword\r\n\r\n    const pageNumber= match.params.pageNumber || 1\r\n\r\n    const dispatch = useDispatch()\r\n    const productList = useSelector (state => state.productList)\r\n    const { loading, error, products, pages, page } = productList\r\n    useEffect(() => {\r\n        dispatch(listProducts(keyword, pageNumber))\r\n    }, [dispatch,keyword, pageNumber])\r\n\r\n    return (\r\n        <>\r\n        <Meta />\r\n        {!keyword ? <ProductCarousel /> : <Link to='/' className='btn btn-light'>Go Back</Link>}\r\n        {\r\n        loading ? \r\n        (<Loader></Loader>) \r\n        : error ? \r\n        (<Message variant='danger'>{error}</Message>) :( \r\n            <>\r\n                <Row>\r\n                    <h1>Latest products</h1>\r\n                    {products.map( (product) => (\r\n                        <Col key={product._id} sm={12} md={6} lg={4} xl={3} >\r\n                        <Product product={product} />\r\n                        </Col>\r\n                    ))}\r\n                </Row>\r\n                <Paginate pages={pages} page={page} keyword={keyword ? keyword : ''} />\r\n            </>\r\n        )\r\n        }\r\n        </>\r\n    )\r\n}\r\nexport default HomeScreen","import React, {useState,useEffect} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport { Row, Col, Image, ListGroup, Card, Button, ListGroupItem, Form } from 'react-bootstrap';\r\nimport Rating from '../components/Rating';\r\nimport { useDispatch,useSelector } from 'react-redux';\r\nimport { listProductDetails, createProductReview, } from '../actions/productActions';\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport Meta from '../components/Meta'\r\n\r\nconst ProductScreen = ({ history, match }) => {\r\n    const [qty, setQty] = useState(1)\r\n    const [rating, setRating] = useState(0)\r\n    const [comment, setComment] = useState('')\r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector((state) => state.productDetails)\r\n    const {loading, error, product} = productDetails\r\n\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const {userInfo} = userLogin\r\n\r\n    const productReviewCreate = useSelector((state) => state.productReviewCreate)\r\n    const {success:successProductReview, error: errorProductReview} = productReviewCreate\r\n\r\n    useEffect( () => {\r\n        if(successProductReview){\r\n            alert('Review Submitted')\r\n            setRating(0)\r\n            setComment('')\r\n            dispatch({ type: PRODUCT_CREATE_REVIEW_RESET})\r\n        }\r\n        dispatch(listProductDetails(match.params.id))\r\n    }, [dispatch, match, successProductReview])\r\n    const addToCartHandler = () => {\r\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(createProductReview(match.params.id, {\r\n            rating,\r\n            comment,\r\n        }))\r\n    }\r\n    return( \r\n        <>\r\n            <Link className='btn btn-dark my-3'  to='/'>\r\n                go back\r\n            </Link>\r\n            {loading ? <Loader/> : error ? <Message variant='danger'>{error}</Message> : (\r\n                <>\r\n                <Meta title={product.name}/>\r\n                <Row>\r\n                <Col md={6}>\r\n                    <Image src={product.image} alt={product.name} fluid />\r\n                </Col>\r\n                <Col md={3}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h3>{product.name}</h3>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Rating value={product.rating} text={`${product.numReviews} reviews`} />\r\n                        </ListGroup.Item>\r\n                        <ListGroupItem>Price: ${product.price}</ListGroupItem>\r\n                        <ListGroup.Item>Description: {product.description}</ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n                <Col>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>\r\n                                        price:\r\n                                    </Col>\r\n                                    <Col>\r\n                                        <strong>${product.price}</strong>\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>\r\n                                        status\r\n                                    </Col>\r\n                                    <Col>\r\n                                        <strong>{product.countInStock >0 ? 'In Stock' : 'Out Of Stock'}</strong>\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            {product.countInStock > 0 && (\r\n                    <ListGroup.Item>\r\n                      <Row>\r\n                        <Col>Qty</Col>\r\n                        <Col>\r\n                          <Form.Control\r\n                            as='select'\r\n                            value={qty}\r\n                            onChange={(e) => setQty(e.target.value)}\r\n                          >\r\n                            {[...Array(product.countInStock).keys()].map(\r\n                              (x) => (\r\n                                <option key={x + 1} value={x + 1}>\r\n                                  {x + 1}\r\n                                </option>\r\n                              )\r\n                            )}\r\n                          </Form.Control>\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  )}\r\n\r\n                            <ListGroup.Item>\r\n                                <Button className='btn-block ' type='button' disabled={product.countInStock === 0} onClick={addToCartHandler} >\r\n                                    Add To Cart\r\n                                </Button>\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col md={6}>\r\n                    <h2>Reviews</h2>\r\n                    {product.reviews.length === 0 && <Message>No reviews</Message>}\r\n                    <ListGroup>\r\n                        {product.reviews.map(review => (\r\n                            <ListGroup.Item key={review._id}>\r\n                                <strong>{review.name}</strong>\r\n                                <Rating value={review.rating} />\r\n                                <p>{review.createdAt.substring(0,10)}</p>\r\n                                <p>{review.comment}</p>\r\n                            </ListGroup.Item>\r\n                        ))}\r\n                            <ListGroup.Item>\r\n                                <h2>Write a Customer Review</h2>\r\n                                {errorProductReview && (<Message variant='danger'>{errorProductReview}</Message>)}\r\n                                {userInfo ? (<Form onSubmit={submitHandler}>\r\n                                    <Form.Group controlId='rating'>\r\n                                        <Form.Label>Rating</Form.Label>\r\n                                        <Form.Control as='select' value={rating} onChange={(e) => setRating(e.target.value)}>\r\n                                            <option value=''>Select...</option>\r\n                                            <option value='1'>1 - Poor</option>\r\n                                            <option value='2'>2 - Fair</option>\r\n                                            <option value='3'>3 - Good</option>\r\n                                            <option value='4'>4 - Very Good</option>\r\n                                            <option value='5'>5 - Excellent</option>\r\n                                            \r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n                                    <Form.Group controlId='comment'>\r\n                                        <Form.Label>Comment</Form.Label>\r\n                                        <Form.Control as='textarea' row='3' value={comment} onChange={(e) => setComment(e.target.value)}></Form.Control>\r\n                                    </Form.Group>\r\n                                    <Button type='submit' variant='primary'>\r\n                                        Submit\r\n                                    </Button>\r\n                                </Form>) : <Message>Please <Link to='/login'>Sign in</Link>to write a review {' '}</Message>}\r\n                            </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n            </Row>\r\n            </>\r\n            )}\r\n            \r\n        </>\r\n        )\r\n    }\r\n\r\n\r\nexport default ProductScreen;\r\n","import axios from 'axios'\r\nimport {CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_SHIPPING_ADDRESS,CART_SAVE_PAYMENT_METHOD } from '../constants/cartConstants'\r\n\r\nexport const addToCart =(id, qty) => async (dispatch, getState) => {\r\n    const {data} = await axios.get(`/api/products/${id}`)\r\n    dispatch({\r\n        type: CART_ADD_ITEM,\r\n        payload: {\r\n            product: data._id,\r\n            name: data.name,\r\n            image: data.image,\r\n            price: data.price,\r\n            countInStock: data.countInStock,\r\n            qty\r\n        },\r\n    })\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const removeFromCart = (id) => (dispatch, getState) => {\r\n    dispatch({\r\n        type : CART_REMOVE_ITEM,\r\n        payload: id,\r\n    })\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const saveShippingAddress = (data) => (dispatch) => {\r\n    dispatch({\r\n      type: CART_SAVE_SHIPPING_ADDRESS,\r\n      payload: data,\r\n    })\r\n  \r\n    localStorage.setItem('shippingAddress', JSON.stringify(data))\r\n  }\r\n\r\nexport const savePaymentMethod = (data) => (dispatch) => {\r\n    dispatch({\r\n        type : CART_SAVE_PAYMENT_METHOD,\r\n        payload: data,\r\n    })\r\n\r\n    localStorage.setItem('paymentMethod', JSON.stringify(data))\r\n}","import React, { useEffect} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport { Row, Col, ListGroup, Image, Form, Button, Card} from 'react-bootstrap'\r\nimport  { addToCart, removeFromCart} from '../actions/cartActions'\r\nimport { useDispatch, useSelector} from 'react-redux'\r\nimport Message from '../components/Message'\r\n\r\nconst CartScreen = ({ match, location, history}) => {\r\n\r\n    const productId = match.params.id\r\n\r\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1\r\n\r\n    const dispatch = useDispatch()\r\n    const cart = useSelector((state) => state.cart)\r\n    const { cartItems } = cart\r\n\r\n    useEffect(() => {\r\n        if (productId) {\r\n            dispatch(addToCart(productId, qty))\r\n        }\r\n    },[dispatch,productId, qty]\r\n    )\r\n    const removeFromCartHandler =(id) => {\r\n        dispatch(removeFromCart(id))\r\n    }\r\n    const checkOutHandler = () => {\r\n        history.push('/login?redirect=shipping')\r\n    }\r\n    return (\r\n        <Row>\r\n            <Col md={8}>\r\n                <h1>Shopping Cart</h1>\r\n                {cartItems.lenght === 0 ? (\r\n                    <Message>\r\n                        Your Cart is empty\r\n                    </Message>    \r\n                ) : (\r\n                    <ListGroup variant='flush'>\r\n                        {cartItems.map(item => (\r\n                            <ListGroup.Item key={item.product}>\r\n                                <Row>\r\n                                    <Col md={2}>\r\n                                        <Image src={item.image} alt={item.name} fluid rounded />\r\n                                    </Col>\r\n                                    <Col md={3}>\r\n                                        <Link to={`/products/${item.product}`}>{item.name}</Link>\r\n                                    </Col>\r\n                                    <Col md={2}>{item.price}</Col>\r\n                                    <Col md={2}>\r\n                                    <Form.Control\r\n                            as='select'\r\n                            value={item.qty}\r\n                            onChange={(e) => dispatch(addToCart(item.product,Number(e.target.value)))}\r\n                          >\r\n                            {[...Array(item.countInStock).keys()].map(\r\n                              (x) => (\r\n                                <option key={x + 1} value={x + 1}>\r\n                                  {x + 1}\r\n                                </option>\r\n                              )\r\n                            )}\r\n                          </Form.Control>\r\n                                    </Col>\r\n                                    <Col md={2}>\r\n                                        <Button type='button' variant='black' onClick={() => removeFromCartHandler(item.product)}>\r\n                                            <i className='fas fa-trash' style={{color : 'red'}}></i>\r\n                                        </Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                        ))}\r\n                    </ListGroup>    \r\n                )}\r\n            </Col>\r\n            <Col md={4}>\r\n                <Card>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>\r\n                                Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)}) Items :\r\n                            </h2>\r\n                            $({cartItems.reduce( (acc, item) => acc + item.qty * item.price, 0).toFixed(2)})\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Button type='button' className='btn-block' disabled={cartItems.length ===0} onClick={checkOutHandler}>\r\n                                Process To checkout\r\n                            </Button>\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default CartScreen\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nconst FormContainer = ({ children }) => {\r\n    return (\r\n        <Container>\r\n            <Row className='justify-content-md-center'>\r\n            <Col xs={12} md={6}>\r\n                {children}\r\n            </Col>\r\n        </Row>\r\n    </Container>\r\n    )\r\n}\r\nexport default FormContainer","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { login } from '../actions/userAction'\r\n\r\nconst LoginScreen = ({ location, history }) => {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { loading, error, userInfo } = userLogin\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    useEffect(() => {\r\n    if (userInfo) {\r\n        history.push(redirect)\r\n    }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(login(email, password))\r\n    }\r\n\r\n    return (\r\n    <FormContainer>\r\n        <h1>Sign In</h1>\r\n        {error && <Message variant='danger'>{error}</Message>}\r\n        {loading && <Loader />}\r\n        <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId='email'>\r\n            <Form.Label>Email Address</Form.Label>\r\n            <Form.Control\r\n            type='email'\r\n            placeholder='Enter email'\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n        ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='password'>\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n            type='password'\r\n            placeholder='Enter password'\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n        ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button type='submit' variant='primary'>\r\n            Sign In\r\n        </Button>\r\n    </Form>\r\n\r\n    <Row className='py-3'>\r\n        <Col>\r\n            New Customer?{' '}\r\n            <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}>\r\n                Register\r\n            </Link>\r\n        </Col>\r\n        </Row>\r\n    </FormContainer>\r\n    )\r\n}\r\n\r\nexport default LoginScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { register } from '../actions/userAction'\r\n\r\nconst RegisterScreen = ({ location, history }) => {\r\n  const [name, setName] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [confirmPassword, setConfirmPassword] = useState('')\r\n  const [message, setMessage] = useState(null)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userRegister = useSelector((state) => state.userRegister)\r\n  const { loading, error, userInfo } = userRegister\r\n\r\n  const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect)\r\n    }\r\n  }, [history, userInfo, redirect])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    if (password !== confirmPassword) {\r\n      setMessage('Passwords do not match')\r\n    } else {\r\n      dispatch(register(name, email, password))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <FormContainer>\r\n      <h1>Sign Up</h1>\r\n      {message && <Message variant='danger'>{message}</Message>}\r\n      {error && <Message variant='danger'>{error}</Message>}\r\n      {loading && <Loader />}\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId='name'>\r\n          <Form.Label>Name</Form.Label>\r\n          <Form.Control\r\n            type='name'\r\n            placeholder='Enter name'\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='email'>\r\n          <Form.Label>Email Address</Form.Label>\r\n          <Form.Control\r\n            type='email'\r\n            placeholder='Enter email'\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='password'>\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Enter password'\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='confirmPassword'>\r\n          <Form.Label>Confirm Password</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Confirm password'\r\n            value={confirmPassword}\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button type='submit' variant='primary' >\r\n          Register\r\n        </Button>\r\n      </Form>\r\n\r\n      <Row className='py-3'>\r\n        <Col>\r\n          Have an Account?{' '}\r\n          <Link to={redirect ? `/login?redirect=${redirect}` : '/login'} >\r\n            Login\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default RegisterScreen","import React, { useState, useEffect } from 'react'\r\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\r\nimport {LinkContainer} from 'react-router-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getUserDetails , updateUserProfile} from '../actions/userAction'\r\nimport { listMyOrders } from '../actions/orderActions'\r\n\r\nconst ProfileScreen = ({ location, history }) => {\r\n  const [name, setName] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [confirmPassword, setConfirmPassword] = useState('')\r\n  const [message, setMessage] = useState(null)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userDetails = useSelector((state) => state.userDetails)\r\n  const { loading, error, user } = userDetails\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile)\r\n  const { success } = userUpdateProfile\r\n\r\n  const orderListMy = useSelector((state) => state.orderListMy)\r\n  const { loading:loadingOrders , error:errorOrders, orders } = orderListMy\r\n\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push('/login')\r\n    } else {\r\n      if(!user.name) {\r\n        dispatch(getUserDetails('profile'))\r\n        dispatch(listMyOrders())\r\n      } else {\r\n        setName(user.name)\r\n        setEmail(user.email)\r\n      }\r\n\r\n    }\r\n  }, [dispatch, history, userInfo, user])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    if (password !== confirmPassword) {\r\n      setMessage('Passwords do not match')\r\n    } else {\r\n      dispatch(updateUserProfile({ id: user._id, name, email,password}))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Row>\r\n      <Col md={3}>\r\n      <h2>User Profile</h2>\r\n      {message && <Message variant='danger'>{message}</Message>}\r\n      {error && <Message variant='danger'>{error}</Message>}\r\n      {success && <Message variant='success'>Profile updated</Message>}\r\n      {loading && <Loader />}\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId='name'>\r\n          <Form.Label>Name</Form.Label>\r\n          <Form.Control\r\n            type='name'\r\n            placeholder='Enter name'\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='email'>\r\n          <Form.Label>Email Address</Form.Label>\r\n          <Form.Control\r\n            type='email'\r\n            placeholder='Enter email'\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='password'>\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Enter password'\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='confirmPassword'>\r\n          <Form.Label>Confirm Password</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Confirm password'\r\n            value={confirmPassword}\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button type='submit' variant='primary'>\r\n          Update\r\n        </Button>\r\n      </Form>\r\n      </Col>\r\n      <Col md={9}>\r\n        <h2>My Order</h2>\r\n        {loadingOrders ? (\r\n          <Loader />\r\n        ) : errorOrders ? (\r\n          <Message variant='danger'>{errorOrders}</Message>\r\n        ) : (\r\n          <Table striped bordered hover responsive className='table-sm'>\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>DATE</th>\r\n                <th>TOTAL</th>\r\n                <th>PAID</th>\r\n                <th>DELIVERED</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {orders.map((order) => (\r\n                <tr key={order._id}>\r\n                  <td>{order._id}</td>\r\n                  <td>{order.createdAt.substring(0, 10)}</td>\r\n                  <td>{order.totalPrice}</td>\r\n                  <td>\r\n                    {order.isPaid ? (\r\n                      order.paidAt.substring(0, 10)\r\n                    ) : (\r\n                      <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    {order.isDelivered ? (\r\n                      order.deliveredAt.substring(0, 10)\r\n                    ) : (\r\n                      <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    <LinkContainer to={`/orders/${order._id}`}>\r\n                      <Button className='btn-sm' variant='light'>\r\n                        Details\r\n                      </Button>\r\n                    </LinkContainer>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        )}\r\n      </Col>\r\n    </Row>\r\n  )\r\n  \r\n}\r\n\r\nexport default ProfileScreen\r\n","import{ORDER_CREATE_REQUEST,ORDER_CREATE_SUCCESS,ORDER_CREATE_FAIL, ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_DETAILS_FAIL, ORDER_PAY_FAIL, ORDER_PAY_SUCCESS, ORDER_PAY_REQUEST, ORDER_LIST_MY_FAIL, ORDER_LIST_MY_SUCCESS, ORDER_LIST_MY_REQUEST, ORDER_LIST_FAIL, ORDER_LIST_SUCCESS, ORDER_LIST_REQUEST, ORDER_DELIVER_FAIL, ORDER_DELIVER_SUCCESS, ORDER_DELIVER_REQUEST,} from '../constants/orderConstants'\r\nimport axios from \"axios\"\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: ORDER_CREATE_REQUEST,\r\n      })\r\n  \r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState()\r\n  \r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      }\r\n  \r\n      const { data } = await axios.post(`/api/orders`, order, config)\r\n  \r\n      dispatch({\r\n        type: ORDER_CREATE_SUCCESS,\r\n        payload: data,\r\n      })\r\n    } catch (error) {\r\n      dispatch({\r\n          type: ORDER_CREATE_FAIL,\r\n          payload: error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n      })\r\n    }\r\n  }\r\n\r\n  export const getOrderDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: ORDER_DETAILS_REQUEST,\r\n      })\r\n  \r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState()\r\n  \r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      }\r\n  \r\n      const { data } = await axios.get(`/api/orders/${id}`, config)\r\n  \r\n      dispatch({\r\n        type: ORDER_DETAILS_SUCCESS,\r\n        payload: data,\r\n      })\r\n    } catch (error) {\r\n      dispatch({\r\n          type: ORDER_DETAILS_FAIL,\r\n          payload: error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n      })\r\n    }\r\n  }\r\n\r\n  export const payOrder = (orderId,paymentResult) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: ORDER_PAY_REQUEST,\r\n      })\r\n  \r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState()\r\n  \r\n      const config = {\r\n        headers: {\r\n\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      }\r\n  \r\n      const { data } = await axios.put(`/api/orders/${orderId}/pay`, paymentResult, config)\r\n  \r\n      dispatch({\r\n        type: ORDER_PAY_SUCCESS,\r\n        payload: data,\r\n      })\r\n    } catch (error) {\r\n      dispatch({\r\n          type: ORDER_PAY_FAIL,\r\n          payload: error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n      })\r\n    }\r\n  }\r\n\r\n  export const deliverOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: ORDER_DELIVER_REQUEST,\r\n      })\r\n  \r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState()\r\n  \r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      }\r\n  \r\n      const { data } = await axios.put(`/api/orders/${order._id}/deliver`, {} , config)\r\n  \r\n      dispatch({\r\n        type: ORDER_DELIVER_SUCCESS,\r\n        payload: data,\r\n      })\r\n    } catch (error) {\r\n      dispatch({\r\n          type: ORDER_DELIVER_FAIL,\r\n          payload: error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n      })\r\n    }\r\n  }\r\n\r\n  \r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_LIST_MY_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get(`/api/orders/myorders`, config)\r\n\r\n    dispatch({\r\n      type: ORDER_LIST_MY_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n    type: ORDER_LIST_MY_FAIL,\r\n    payload:  error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    })\r\n  }\r\n}\r\n  \r\nexport const listOrders = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_LIST_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get(`/api/orders`, config)\r\n\r\n    dispatch({\r\n      type: ORDER_LIST_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n    type: ORDER_LIST_FAIL,\r\n    payload:  error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    })\r\n  }\r\n}","import React from 'react'\r\nimport { Nav } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nconst CheckoutSteps = ({ step1, step2, step3, step4 }) => {\r\n  return (\r\n    <Nav className='justify-content-center mb-4'>\r\n      <Nav.Item>\r\n        {step1 ? (\r\n          <LinkContainer to='/login'>\r\n            <Nav.Link>Sign In</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Sign In</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n\r\n      <Nav.Item>\r\n        {step2 ? (\r\n          <LinkContainer to='/shipping'>\r\n            <Nav.Link>Shipping</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Shipping</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n\r\n      <Nav.Item>\r\n        {step3 ? (\r\n          <LinkContainer to='/payment'>\r\n            <Nav.Link>Payment</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Payment</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n\r\n      <Nav.Item>\r\n        {step4 ? (\r\n          <LinkContainer to='/placeorder'>\r\n            <Nav.Link>Place Order</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Place Order</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n    </Nav>\r\n  )\r\n}\r\n\r\nexport default CheckoutSteps","import React, { useState } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { saveShippingAddress } from '../actions/cartActions'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\n\r\nconst ShippingScreen = ({ history }) => {\r\n\r\n    const cart = useSelector((state) => state.cart)\r\n    const  {shippingAddress}  = cart\r\n  \r\n    const [address, setAddress] = useState(shippingAddress.address)\r\n    const [city, setCity] = useState(shippingAddress.city)\r\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\r\n    const [country, setCountry] = useState(shippingAddress.country)\r\n  \r\n    const dispatch = useDispatch()\r\n  \r\n    const submitHandler = (e) => {\r\n      e.preventDefault()\r\n      dispatch(saveShippingAddress({ address, city, postalCode, country }))\r\n      history.push('/payment')\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 />\r\n            <h1>Shipping</h1>\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='address'>\r\n                <Form.Label>Address</Form.Label>\r\n                <Form.Control type=\"text\"\r\n                placeholder='Enter address'\r\n                value={address}\r\n                required\r\n                onChange={ (e)=> setAddress(e.target.value)}></Form.Control>\r\n                </Form.Group> \r\n\r\n                <Form.Label>city</Form.Label>\r\n                <Form.Group controlId=\"city\">\r\n                <Form.Control type=\"text\"\r\n                placeholder='Enter city'\r\n                value={city}\r\n                required\r\n                onChange={(e)=> setCity(e.target.value)}></Form.Control> \r\n                </Form.Group>\r\n                \r\n                <Form.Group controlId=\"postalCode\">\r\n                <Form.Label>Postal Code</Form.Label>\r\n                <Form.Control type=\"text\"\r\n                placeholder='Enter postal code'\r\n                value={postalCode}\r\n                required\r\n                onChange={(e)=> setPostalCode(e.target.value)}></Form.Control> </Form.Group>\r\n                \r\n                <Form.Group controlId=\"country\">\r\n                <Form.Label>Country</Form.Label>\r\n                <Form.Control type=\"text\"\r\n                placeholder='Enter Country'\r\n                value={country}\r\n                required\r\n                onChange={(e)=> setCountry(e.target.value)}></Form.Control> </Form.Group>\r\n                \r\n                \r\n                <br></br>\r\n                <div className=\"d-grid gap-2\">\r\n                    <Button type='submit' variant=\"outline-success\" size=\"sm\">\r\n                        <h3>Continue</h3>\r\n                    </Button>\r\n                </div>\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\nexport default ShippingScreen\r\n","import React, {useState} from 'react'\r\nimport { Form, Button, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { savePaymentMethod } from '../actions/cartActions'\r\n\r\n const PaymentScreen = ({history}) => {\r\n  const cart = useSelector((state) => state.cart)\r\n  const { shippingAddress } = cart\r\n\r\n  if (!shippingAddress.address) {\r\n    history.push('/shipping')\r\n  }\r\n\r\n  const [paymentMethod, setPaymentMethod] = useState('PayPal')\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(savePaymentMethod(paymentMethod))\r\n    history.push('/placeorder')\r\n  }\r\n\r\n  return ( \r\n    <FormContainer>\r\n      <CheckoutSteps step1 step2 step3 />\r\n      <h1>Payment Method</h1>\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group>\r\n          <Form.Label as='legend'>Select Method</Form.Label>\r\n          <Col>\r\n            <Form.Check\r\n              type='radio'\r\n              label='PayPal or Credit Card'\r\n              id='PayPal'\r\n              name='paymentMethod'\r\n              value='PayPal'\r\n              checked\r\n              onChange={(e) => setPaymentMethod(e.target.value)}\r\n            ></Form.Check>\r\n            <Form.Check\r\n              type='radio'\r\n              label='Stripe'\r\n              id='Stripe'\r\n              name='paymentMethod'\r\n              value='Stripe'\r\n              onChange={(e) => setPaymentMethod(e.target.value)}\r\n            ></Form.Check> \r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Button type='submit' variant='primary'>\r\n          Continue\r\n        </Button>\r\n      </Form>\r\n    </FormContainer>\r\n  )\r\n  }\r\nexport default PaymentScreen\r\n","import React, {useEffect} from 'react'\r\nimport {Row, Col, ListGroup, Image, Card,Button } from 'react-bootstrap'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport { Link } from 'react-router-dom'\r\nimport { createOrder } from '../actions/orderActions'\r\n\r\n\r\nconst PlaceOrderScreen = ({history}) => {\r\n    const dispatch = useDispatch()\r\n    const cart = useSelector(state=> state.cart)\r\n    //   Calculate prices\r\n    const addDecimals = (num) => {\r\n      return (Math.round(num * 100) / 100).toFixed(2)\r\n    }\r\n    cart.itemsPrice = addDecimals(\r\n      cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n    )\r\n    cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 100)\r\n    cart.taxPrice = addDecimals(Number((0.15 * cart.itemsPrice).toFixed(2)))\r\n    cart.totalPrice = (\r\n      Number(cart.itemsPrice) +\r\n      Number(cart.shippingPrice) +\r\n      Number(cart.taxPrice)\r\n    ).toFixed(2)\r\n\r\n    const orderCreate = useSelector(state => state.orderCreate)\r\n    const { order, success, error} = orderCreate\r\n\r\n    useEffect(() => {\r\n      if(success) {\r\n        history.push(`/orders/${order._id}`)\r\n      }\r\n      // eslint-disable-next-line\r\n    },[history, success])\r\n\r\n    const placeOrderHandler = () => {\r\n      dispatch(createOrder({\r\n        orderItems: cart.cartItems,\r\n        shippingAddress: cart.shippingAddress,\r\n        paymentMethod: cart.paymentMethod,\r\n        itemsPrice: cart.itemsPrice,\r\n        shippingPrice: cart.shippingPrice,\r\n        taxPrice: cart.taxPrice,\r\n        totalPrice: cart.totalPrice,\r\n      }))\r\n    }\r\n    return (\r\n    <>\r\n      <CheckoutSteps step1 step2 step3 step4 />\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant='flush'>\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <strong>Address:</strong>\r\n                {' '}{cart.shippingAddress.address}{' '}, {' '}{cart.shippingAddress.city}{' '}, {' '}\r\n                {cart.shippingAddress.postalCode}{' '},{' '}\r\n                {cart.shippingAddress.country}{' '}.\r\n              </p>\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <strong>Method : </strong>\r\n              {cart.paymentMethod}\r\n            </ListGroup.Item>\r\n            \r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {cart.cartItems.length === 0 ? (\r\n                <Message>Your cart is empty</Message>\r\n              ) : (\r\n                <ListGroup variant='flush'>\r\n                  {cart.cartItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n            </ListGroup>            \r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant='flush'>\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>${cart.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>${cart.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>${cart.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>${cart.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                {error && <Message variant='danger'>{error}</Message>}\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Button\r\n                  type='button'\r\n                  className='btn-block'\r\n                  disabled={cart.cartItems === 0}\r\n                  onClick={placeOrderHandler}\r\n                >\r\n                  Place Order\r\n                </Button>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PlaceOrderScreen\r\n","import React, {useState,useEffect} from 'react'\r\nimport {Row, Col, ListGroup, Image, Card, Button} from 'react-bootstrap'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport { Link } from 'react-router-dom'\r\nimport Loader from '../components/Loader'\r\nimport { getOrderDetails, payOrder ,deliverOrder} from '../actions/orderActions'\r\nimport axios from 'axios'\r\nimport { PayPalButton } from 'react-paypal-button-v2'\r\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstants'\r\n\r\n\r\nconst OrderScreen = ({ match, history }) => {\r\n    const orderId = match.params.id\r\n\r\n    const [sdkReady, setSdkReady] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n    \r\n    const orderDetails = useSelector((state)=> state.orderDetails)\r\n    const { order ,loading ,error } = orderDetails\r\n\r\n    const orderPay = useSelector((state)=> state.orderPay)\r\n    const { loading:loadingPay ,success:successPay } = orderPay\r\n\r\n    const orderDeliver = useSelector((state)=> state.orderDeliver)\r\n    const { loading:loadingDeliver ,success:successDeliver } = orderDeliver\r\n    \r\n    const userLogin = useSelector((state)=> state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    if(!loading) {\r\n      //   Calculate prices\r\n    const addDecimals = (num) => {\r\n      return (Math.round(num * 100) / 100).toFixed(2)\r\n    }\r\n    order.itemsPrice = addDecimals(\r\n      order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n    )\r\n    }\r\n    \r\n\r\n    useEffect(() => {\r\n      if(!userInfo){\r\n        history.push('/login')\r\n      }\r\n      const addPayPalScript = async () => {\r\n        const { data: clientId} = await axios.get('/api/config/paypal')\r\n        const script = document.createElement('script')\r\n        script.type = 'text/javascript'\r\n        script.src =`https://www.paypal.com/sdk/js?client-id=${clientId}`\r\n        script.async = true \r\n        script.onload =() => {\r\n          setSdkReady(true)\r\n        }\r\n        document.body.appendChild(script)\r\n\r\n      }\r\n      if(!order || successPay || successDeliver) {\r\n        dispatch({ type: ORDER_PAY_RESET })\r\n        dispatch({ type: ORDER_DELIVER_RESET })\r\n        dispatch(getOrderDetails(orderId))\r\n      } else if (!order.isPaid) {\r\n        if(!window.paypal){\r\n          addPayPalScript()\r\n        } else {\r\n          setSdkReady(true)\r\n        }\r\n      }\r\n  }, [dispatch, userInfo, history, successPay, successDeliver, order, orderId]) \r\n\r\n  const successPaymentHandler = (paymentResult) => {\r\n    console.log(paymentResult)\r\n    dispatch(payOrder(orderId, paymentResult))\r\n  }\r\n\r\n  const deliverHandler = () => {\r\n    dispatch(deliverOrder(order))\r\n  }\r\n\r\n    return (\r\n        loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : <>\r\n        <h1>Order: {order._id}</h1>\r\n        <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant='flush'>\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p><strong>Name:</strong> {order.user.name}</p>\r\n              <p><strong>Email:</strong>{' '}<a href={`mailto:${order.user.email}`}>{order.user.email}</a></p>\r\n              <p>\r\n                <strong>Address:</strong>\r\n                {' '}{order.shippingAddress.address}{' '}, {' '}{order.shippingAddress.city}{' '}, {' '}\r\n                {order.shippingAddress.postalCode}{' '},{' '}\r\n                {order.shippingAddress.country}{' '}.\r\n              </p>\r\n             \r\n                {order.isDelivred ? <Message variant='success'>Delivred on {order.delivredAt}</Message> : <Message variant='danger'>Not Delivred</Message>}\r\n             \r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <p><strong>Method : </strong>\r\n              {order.paymentMethod}</p>\r\n             \r\n                {order.isPaid ? <Message variant='success'>Paid on {order.paidAt}</Message> : <Message variant='danger'>Not Paid</Message>}\r\n            \r\n            </ListGroup.Item>\r\n            \r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {order.orderItems.length === 0 ? (\r\n                <Message>Order is empty</Message>\r\n              ) : (\r\n                <ListGroup variant='flush'>\r\n                  {order.orderItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n            </ListGroup>            \r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant='flush'>\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>${order.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>${order.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>${order.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>${order.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              {!order.isPaid && (\r\n                <ListGroup.Item>\r\n                  {loadingPay && <Loader />}\r\n                  {!sdkReady ? (<Loader />) : (\r\n                    <PayPalButton amount={order.totalPrice} onSuccess={successPaymentHandler} />\r\n                  )}\r\n                </ListGroup.Item>\r\n              )}\r\n              \r\n              {loadingDeliver && <Loader />}\r\n              {userInfo && order.isPaid && userInfo.isAdmin && !order.isDelivered && (\r\n                <ListGroup.Item>\r\n                  <Button type='button' className='btn btn-block' onClick={deliverHandler}>\r\n                    Mark As Delivred\r\n                  </Button>\r\n                </ListGroup.Item>\r\n              )}\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n    )\r\n}\r\n\r\nexport default OrderScreen\r\n","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button,Col,Row } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { listUsers, deleteUser } from '../actions/userAction'\r\nconst UserListScreen = ({ history}) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const userList = useSelector(state => state.userList)\r\n    const { loading, error, users } = userList \r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin \r\n\r\n    const userDelete = useSelector(state => state.userDelete)\r\n    const { success: successDelete } = userDelete \r\n\r\n    useEffect(() => {\r\n        if(userInfo && userInfo.isAdmin){\r\n            dispatch(listUsers())\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n    },[dispatch,userInfo, history, successDelete])\r\n    const deleteHandler = (id) => {\r\n        if(window.confirm('Are you sure')){\r\n            dispatch(deleteUser(id))\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <br></br>\r\n            <Row className='align-items-center' style={{backgroundColor:\"#FDFEFE\"}}><Col></Col><Col>\r\n            <h1>Users</h1>\r\n            </Col><Col></Col></Row>\r\n            <br></br>\r\n            {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\r\n                <Table striped bordered hover responsive className='table-sm' style={{borderCollapse: \"separate\",borderSpacing:\"0 15px\"}}>\r\n                    <thead style={{backgroundColor:\"#D5F5E3\"}}>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>NAME</th>\r\n                            <th>EMAIL</th>\r\n                            <th>ADMIN</th>\r\n                            <th>EDIT/DELETE</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {users.map(user => (\r\n                            <tr key={user._id}>\r\n                                <td>{user._id}</td>\r\n                                <td>{user.name}</td>\r\n                                <td><a href={`mailto:${user.email}`}>{user.email}</a></td>\r\n                                <td>{user.isAdmin ? (<i className='fas fa-check' style={{color: 'green'}}></i>) : <i className='fas fa-times' style={{color: 'red'}}></i>}</td>\r\n                                <td>\r\n                                    <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                                        <Button variant='light' className='btn-sm'>\r\n                                            <i className='fas fa-edit'></i>\r\n                                        </Button>\r\n                                    </LinkContainer>\r\n                                    <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(user._id)}>\r\n                                        <i className='fas fa-trash'></i>\r\n                                    </Button>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UserListScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { getUserDetails, updateUser    } from '../actions/userAction'\r\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\r\n\r\nconst UserEditScreen = ({ match, history }) => {\r\n    const userId = match.params.id\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [isAdmin, setIsAdmin] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector((state) => state.userDetails)\r\n    const { loading, error, user } = userDetails\r\n\r\n    const userUpdate = useSelector((state) => state.userUpdate)\r\n    const { loading: loadingUpdate, error: errorUpdate, success: successUpdate } = userUpdate\r\n\r\n    \r\n    useEffect(() => {\r\n        if(successUpdate){\r\n            dispatch({ type: USER_UPDATE_RESET})\r\n            history.push('/admin/userList')\r\n        } else {\r\n            if(!user.name || user._id !== userId) {\r\n                dispatch(getUserDetails(userId))\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n                setIsAdmin(user.isAdmin)\r\n            }\r\n        }\r\n        \r\n    }, [dispatch, userId, user, successUpdate, history])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateUser( { _id : userId, name, email, isAdmin } ))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Link to='/admin/userlist' className='btn btn-light my-3'>\r\n                Go Back\r\n            </Link>\r\n            <FormContainer>\r\n            <h1>Edit User</h1>\r\n            {loadingUpdate && <Loader />}\r\n            {errorUpdate && <Message variantt='danger'>{errorUpdate}</Message>}\r\n            {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\r\n                <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control\r\n                        type='name'\r\n                        placeholder='Enter name'\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                    ></Form.Control>\r\n                    </Form.Group>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                        type='email'\r\n                        placeholder='Enter email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <br></br>\r\n\r\n                <Form.Group controlId='isadmin'>\r\n                    <Form.Check\r\n                        type='checkbox'\r\n                        label='Is Admin'\r\n                        checked={isAdmin}\r\n                        onChange={(e) => setIsAdmin(e.target.checked)}\r\n                    ></Form.Check>\r\n                </Form.Group>\r\n\r\n                <br></br>\r\n\r\n                <div className=\"d-grid gap-2\">\r\n                    <Button type='submit' variant=\"outline-success\" size=\"sm\">\r\n                        <h3>Update</h3>\r\n                    </Button>\r\n                </div>\r\n            </Form>\r\n        ) }\r\n            \r\n    </FormContainer>\r\n    </>\r\n    )\r\n}\r\n\r\nexport default UserEditScreen","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport Paginate from '../components/Paginate'\r\nimport { listProducts, deleteProduct, createProduct } from '../actions/productActions'\r\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\r\nconst ProductListScreen = ({ history, match}) => {\r\n    const pageNumber =match.params.pageNumber || 1\r\n    const dispatch = useDispatch()\r\n\r\n    const productList = useSelector(state => state.productList)\r\n    const { loading, error, products, pages, page } = productList \r\n\r\n    const productDelete = useSelector(state => state.productDelete)\r\n    const { loading: loadingDelete, error:errorDelete, success: successDelete } = productDelete  \r\n\r\n    const productCreate = useSelector(state => state.productCreate)\r\n    const { loading: loadingCreate, error:errorCreate, success: successCreate, product: createdProduct } = productCreate  \r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin \r\n\r\n    useEffect(() => {\r\n        dispatch({type: PRODUCT_CREATE_RESET})\r\n        if(!userInfo.isAdmin){\r\n            history.push('/login')\r\n        }\r\n        if(successCreate){\r\n            history.push(`/admin/product/${createdProduct._id}/edit`)\r\n        } else {\r\n            dispatch(listProducts('', pageNumber))\r\n        }\r\n        \r\n    },[dispatch, userInfo, history, successDelete, successCreate , createdProduct, pageNumber])\r\n    const deleteHandler = (id) => {\r\n        if(window.confirm('Are you sure')){\r\n            dispatch(deleteProduct(id))\r\n        }\r\n    }\r\n    const createProductHandler = () => {\r\n        dispatch(createProduct())\r\n    }\r\n    return (\r\n        <><br></br>\r\n            <Row className='align-items-center' style={{backgroundColor:\"#FDFEFE\"}}>\r\n                <Col>\r\n                    <h1>Products</h1>\r\n                </Col>\r\n                <Col></Col><Col></Col>\r\n                <Col className='text-right' style={{backgroundColor:\"#FDFEFE\"}}>\r\n                    <Button className='my-3' onClick={createProductHandler}>\r\n                        <i className='fas fa-plus'> {' '} </i> Create Product\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n            <br></br>\r\n            {loadingDelete && <Loader /> }\r\n            {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\r\n            {loadingCreate && <Loader /> }\r\n            {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\r\n            {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\r\n                <>\r\n                <Table striped bordered hover responsive className='table-sm' style={{borderCollapse: \"separate\",borderSpacing:\"0 15px\"}}>\r\n                    <thead style={{backgroundColor:\"#D5F5E3\"}}>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>NAME</th>\r\n                            <th>Price</th>\r\n                            <th>CATEGORY</th>\r\n                            <th>BRAND</th>\r\n                            <th>EDIT/DELETE</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {products.map(product => (\r\n                            <tr key={product._id}>\r\n                                <td>{product._id}</td>\r\n                                <td>{product.name}</td>\r\n                                <td>{product.price}</td>\r\n                                <td>{product.category}</td>\r\n                                <td>{product.brand}</td>\r\n                                <td>\r\n                                    <LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n                                        <Button variant='light' className='btn-sm'>\r\n                                            <i className='fas fa-edit'></i>\r\n                                        </Button>\r\n                                    </LinkContainer>\r\n                                    <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(product._id)}>\r\n                                        <i className='fas fa-trash'></i>\r\n                                    </Button>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n                <Paginate pages={pages} page={page} isAdmin={true} />\r\n                </>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProductListScreen\r\n","import axios from 'axios'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, FormFile } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { listProductDetails, updateProduct } from '../actions/productActions'\r\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\r\n\r\n\r\nconst ProductEditScreen = ({ match, history }) => {\r\n    const productId = match.params.id\r\n\r\n    const [name, setName] = useState('')\r\n    const [price, setPrice] = useState(0)\r\n    const [image, setImage] = useState('')\r\n    const [brand, setBrand] = useState('')\r\n    const [category, setCategory] = useState('')\r\n    const [countInStock, setCountInStock] = useState(0)\r\n    const [description, setDescription] = useState('')\r\n    const [uploading, setUploading] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector((state) => state.productDetails)\r\n    const { loading, error, product } = productDetails\r\n\r\n    const productUpdate = useSelector((state) => state.productUpdate)\r\n    const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n    } = productUpdate\r\n\r\n    useEffect(() => {\r\n    if (successUpdate) {\r\n        dispatch({ type: PRODUCT_UPDATE_RESET })\r\n        history.push('/admin/productlist')\r\n    } else {\r\n        if (!product.name || product._id !== productId) {\r\n        dispatch(listProductDetails(productId))\r\n        } else {\r\n        setName(product.name)\r\n        setPrice(product.price)\r\n        setImage(product.image)\r\n        setBrand(product.brand)\r\n        setCategory(product.category)\r\n        setCountInStock(product.countInStock)\r\n        setDescription(product.description)\r\n        }\r\n    }\r\n    }, [dispatch, history, productId, product,successUpdate])\r\n\r\n    const uploadFileHandler = async (e) => {\r\n    const file = e.target.files[0]\r\n    const formData = new FormData()\r\n    formData.append('image', file)\r\n    setUploading(true)\r\n\r\n    try {\r\n        const config = {headers: {'Content-Type': 'multipart/form-data',},}\r\n\r\n        const { data } = await axios.post('/api/upload', formData, config)\r\n\r\n        setImage(data)\r\n        setUploading(false)\r\n        } catch (error) {\r\n            console.error(error)\r\n            setUploading(false)\r\n        }\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n    e.preventDefault()\r\n        dispatch(\r\n            updateProduct({\r\n                _id: productId,\r\n                name,\r\n                price,\r\n                image,\r\n                brand,\r\n                category,\r\n                description,\r\n                countInStock,\r\n            })\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Link to='/admin/productlist' className='btn btn-light my-3'>\r\n                Go Back\r\n            </Link>\r\n            <FormContainer>\r\n            <h1>Edit Product</h1>\r\n            {loadingUpdate && <Loader />}\r\n            {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n            {loading ? (\r\n                <Loader />\r\n            ) : error ? (\r\n                <Message variant='danger'>{error}</Message>\r\n            ) : (\r\n                <Form onSubmit={submitHandler}>\r\n                    <Form.Group controlId='name'>\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control\r\n                            type='name'\r\n                            placeholder='Enter name'\r\n                            value={name}\r\n                            onChange={(e) => setName(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n                    <br></br>\r\n                    <Form.Group controlId='price'>\r\n                        <Form.Label>Price</Form.Label>\r\n                        <Form.Control\r\n                            type='number'\r\n                            placeholder='Enter price'\r\n                            value={price}\r\n                            onChange={(e) => setPrice(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n                    <br></br>\r\n                    <Form.Group controlId='image'>\r\n                        <Form.Label>Image</Form.Label>\r\n                        <Form.Control\r\n                            type='text'\r\n                            placeholder='Enter image url'\r\n                            value={image}\r\n                            onChange={(e) => setImage(e.target.value)}\r\n                        ></Form.Control>\r\n                        <FormFile id='image-file' label='Choose File' custom onChange={uploadFileHandler}></FormFile>\r\n                    {uploading && <Loader />}\r\n                    </Form.Group>\r\n                    <br></br>\r\n                    <Form.Group controlId='brand'>\r\n                        <Form.Label>Brand</Form.Label>\r\n                        <Form.Control\r\n                            type='text'\r\n                            placeholder='Enter brand'\r\n                            value={brand}\r\n                            onChange={(e) => setBrand(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n                    <br></br>\r\n                    <Form.Group controlId='countInStock'>\r\n                        <Form.Label>Count In Stock</Form.Label>\r\n                        <Form.Control\r\n                            type='number'\r\n                            placeholder='Enter countInStock'\r\n                            value={countInStock}\r\n                            onChange={(e) => setCountInStock(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n                    <br></br>\r\n                    <Form.Group controlId='category'>\r\n                        <Form.Label>Category</Form.Label>\r\n                        <Form.Control\r\n                            type='text'\r\n                            placeholder='Enter category'\r\n                            value={category}\r\n                            onChange={(e) => setCategory(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n                    <br></br>\r\n                    <Form.Group controlId='description'>\r\n                        <Form.Label>Description</Form.Label>\r\n                        <Form.Control\r\n                            type='text'\r\n                            placeholder='Enter description'\r\n                            value={description}\r\n                            onChange={(e) => setDescription(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n                    <br></br>\r\n                    <div className=\"d-grid gap-2\">\r\n                        <Button type='submit' variant=\"outline-success\" size=\"sm\">\r\n                            <h3>Update</h3>\r\n                        </Button>\r\n                    </div>\r\n                </Form>\r\n                )   \r\n            }\r\n            </FormContainer>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProductEditScreen\r\n","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button,Col,Row } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { listOrders } from '../actions/orderActions'\r\nconst OrderListScreen = ({ history}) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const orderList = useSelector(state => state.orderList)\r\n    const { loading, error, orders } = orderList \r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin \r\n\r\n    useEffect(() => {\r\n        if(userInfo && userInfo.isAdmin){\r\n            dispatch(listOrders())\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n    },[dispatch,userInfo, history])\r\n    \r\n    return (\r\n        <>\r\n            <br></br>\r\n            <Row className='align-items-center' style={{backgroundColor:\"#FDFEFE\"}}><Col></Col><Col>\r\n            <h1>Orders</h1>\r\n            </Col><Col></Col></Row>\r\n            <br></br>\r\n            {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\r\n                <Table striped bordered hover responsive className='table-sm' style={{borderCollapse: \"separate\",borderSpacing:\"0 15px\"}}>\r\n                    <thead style={{backgroundColor:\"#D5F5E3\"}}>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>USER</th>\r\n                            <th>DATE</th>\r\n                            <th>TOTAL</th>\r\n                            <th>PAID</th>\r\n                            <th>DELIVRED</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {orders.map((order) => (\r\n                            <tr key={order._id}>\r\n                                <td>{order._id}</td>\r\n                                <td>{order.user && order.user.name}</td>\r\n                                <td>{order.createdAt.substring(0, 10)}</td>\r\n                                <td>${order.totalPrice}</td>\r\n                                <td>{order.isPaid ? (order.paidAt.substring(0, 10)) : <i className='fas fa-times' style={{color: 'red'}}></i>}</td>\r\n                                <td>{order.isDelevred ? (order.delevredAt.substring(0, 10)) : <i className='fas fa-times' style={{color: 'red'}}></i>}</td>\r\n                                <td>\r\n                                    <LinkContainer to={`/orders/${order._id}`}>\r\n                                        <Button variant='light' className='btn-sm'>\r\n                                            Details\r\n                                        </Button>\r\n                                    </LinkContainer>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default OrderListScreen\r\n","import React from \"react\";\nimport {BrowserRouter as Router , Route} from 'react-router-dom';\nimport { Container } from \"react-bootstrap\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport HomeScreen from \"./screens/HomeScreen\";\nimport ProductScreen from \"./screens/ProductScreen\";\nimport CartScreen from \"./screens/CartScreen\";\nimport LoginScreen from \"./screens/LoginScreen\";\nimport RegisterScreen from \"./screens/RegisterScreen\";\nimport ProfileScreen from \"./screens/ProfileScreen\";\nimport ShippingScreen from \"./screens/ShippingScreen\";\nimport PaymentScreen from \"./screens/PaymentScreen\";\nimport PlaceOrderScreen from './screens/PlaceOrderScreen'\nimport OrderScreen from './screens/OrderScreen'\nimport UserListScreen from './screens/UserListScreen'\nimport UserEditScreen from './screens/UserEditScreen'\nimport ProductListScreen from './screens/ProductListScreen'\nimport ProductEditScreen from \"./screens/ProductEditScreen\"\nimport OrderListScreen from \"./screens/OrderListScreen\"\n\nfunction App() {\n  return (\n    <Router>\n    <Header />\n    <main className='py-3'>\n      <Container>\n      <Route path='/login' component={LoginScreen} />\n      <Route path='/profile' component={ProfileScreen} />\n      <Route path='/register' component={RegisterScreen} />\n      <Route path='/product/:id' component={ProductScreen} />\n      <Route path='/admin/product/:id/edit' component={ProductEditScreen} />\n      <Route path='/cart/:id?' component={CartScreen} />\n      <Route path='/admin/userlist' component={UserListScreen} />\n      <Route path='/admin/productlist' component={ProductListScreen} exact/>\n      <Route path='/admin/productlist/:pageNumber' component={ProductListScreen} exact/>\n      <Route path='/admin/orderlist' component={OrderListScreen} />\n      <Route path='/admin/user/:id/edit' component={UserEditScreen} />\n      <Route path='/search/:keyword' component={HomeScreen} exact />\n      <Route path='/search/:keyword/page/:pageNumber' component={HomeScreen} exact />\n      <Route path='/shipping' component={ShippingScreen}/>\n      <Route path='/payment' component={PaymentScreen}/>\n      <Route path='/placeorder' component={PlaceOrderScreen}/>\n      <Route path='/orders/:id' component={OrderScreen}/>\n      <Route path='/page/:pageNumber' component={HomeScreen} exact />\n      <Route path='/' component={HomeScreen} exact />\n      </Container>\n      \n    </main>\n    <Footer />\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport './index.css';\nimport './bootstrap.min.css'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}